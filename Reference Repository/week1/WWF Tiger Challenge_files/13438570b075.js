function introAnimate_particles(module){module.Particles=function(stage){createjs.Shape.apply(this);var self=this;var points=[];var emission=[],bgPoints=[];var animation_paused=false;var fr_curr=0;this._state='quietly';var out_points=[],in_points=[];createjs.Ticker.addEventListener('tick',nextFrame);var _waveId=0;this.useMouse=false;function wave(f2,duration,offset,_emit,bg,useMouse){var id=++_waveId;if(duration==undefined)duration=1000;while(bg-->0){var rnd=[module.randomPoint(false,.2)];rnd.doEight=true;f2.push(rnd);}
var _tick=0;var destructPoints=[].concat(points);var constructPoints=[];var start=new Date().getTime();var probability=points.length/f2.length;createjs.Ticker.addEventListener('tick',tick);var destructed=false;var constructed=false;function tick(){var time=new Date().getTime()-start;var r=module.diagonal*.66;if(time<duration&&destructPoints.length>0){doDestruct((time/duration-.5)*r);}else if(!destructed){self.state('chaos');destructed=true;doDestruct(Infinity);}
if(id==_waveId){if(time>=offset&&time<offset+duration){self.useMouse=useMouse;doConstruct(((time-offset)/duration-.5)*r);}else if(time>offset+duration&&!constructed){constructed=true;doConstruct(Infinity);}}
if(time>offset+duration){if(id==_waveId){for(var i=0;i<constructPoints.length;i++){constructPoints[i].clear();}}
createjs.Ticker.removeEventListener('tick',tick);destructPoints=undefined;constructPoints=undefined;}}
function doDestruct(distance){for(var i=0;i<destructPoints.length;i++){if(points.indexOf(destructPoints[i])<0){destructPoints.splice(i--,1);continue;}
if(module.distance(destructPoints[i],0)<distance){if(id!=_waveId||f2.length>0&&!(probability>1&&Math.random()>1/probability)){destructPoints[i].goToPoint();constructPoints.push(destructPoints[i]);}else{destructPoints[i].clear();}
destructPoints.splice(i--,1);}}}
function doConstruct(distance){for(var i=0;i<f2.length;i++){if(module.distance(f2[i][fr_curr%f2[i].length],0)<distance){var pnt;if(constructPoints.length>0&&!(probability<1&&Math.random()>probability)){pnt=constructPoints.shift();}else{points.push(pnt=module.PointUIFactory.getPoint());}
pnt.goToPoint(f2[i],f2[i].doEight||false,false,_emit);pnt.initSpeed(f2[i].doEight);f2.splice(i--,1);}}}}
this.init=function(f2,_emit,useMouse){wave(f2,1000,1000,_emit,!_emit?50:0,useMouse);};this.progress=function(){if(!points||points.length==0)return 0;var n=0;for(var i=0;i<points.length;i++){n=n+points[i].position;}
return 1-n/points.length;};function updatePointsArray(arr){var isChaos=false;var mouse=self.useMouse?module.mouse:undefined;for(var i=0;i<arr.length;i++){if(!arr[i].update(fr_curr,mouse)){arr.splice(i--,1);}else{isChaos=isChaos||arr[i].position>0;arr[i].draw(self.graphics);}}
return isChaos;}
function nextFrame(evt){fr_curr++;self.graphics.clear();module.mouse.x+=((stage.mouseX-stage.x)/stage.scaleX-module.mouse.x)*.1599;module.mouse.y+=((stage.mouseY-stage.y)/stage.scaleY-module.mouse.y)*.1599;var isChaos=updatePointsArray(points);if(self.state()=='chaos'&&!isChaos){self.state('quietly');}
updatePointsArray(bgPoints);updateEmissionPoints();addEmissionPoints();}
function updateEmissionPoints(){for(var i=0;i<emission.length;i++){var point=emission[i];point.speedX=point.speedX+1;point.speedY=point.speedY*0.5;point.pnt.x=point.pnt.x+point.speedX*point.pnt.emit;point.pnt.y=point.pnt.y+point.speedY;point.pnt.alpha=point.pnt.alpha-0.025;if(point.pnt.alpha<=0||point.pnt.x>module.stageWidth){emission.splice(i--,1);}else{point.pnt.draw(self.graphics);}}}
function addEmissionPoints(){var visible_points=[];for(var i=0;i<points.length;i++){if(points[i].alpha>0.2&&points[i].position==0&&points[i].emit){visible_points.push(points[i]);}}
var max_cnt=3+6*Math.random();var cnt=0;while(visible_points.length>0&&cnt<max_cnt){var point=visible_points.splice(Math.floor(Math.random()*visible_points.length),1).pop();var em_point=new module.PointUI();em_point.x=point.x;em_point.y=point.y;em_point.emit=point.emit;emission.push({"pnt":em_point,"speedX":point.speedX,"speedY":point.speedY});++cnt;}}};var p=module.Particles.prototype=new createjs.Shape();p.state=function(val){if(val==undefined)return this._state;this._state=val;var evt=new createjs.Event('changestate');evt.data=val;this.dispatchEvent(evt);};p.mouseMove=function(x,y){}}
function introAnimate_pointUI(module){var first_point;var _2PI=2*Math.PI;module.PointUI=function(){var self=this;var IN="in",OUT="out",state;var chaos_pnt={x:0,y:0},current_frames;var _tween;this.speedX=this.speedY=0;var alphaMagnitude=0.6+0.2*Math.random();var magnitude=0.2+0.8*Math.random();this.magnitude=magnitude;var totalEight=Math.random()*100;var eightW=Math.random()*50+50,eightH=eightW/2;var eightOffset=Math.round(Math.random()*totalEight);var mouseOffsetX=0,mouseOffsetY=0;this.chaos=0;this.alpha=1;this.position=0;this.x=0;this.y=0;this.scale=1;initRadius();function initRadius(){self.r=Math.random()*3+1;var rnd=Math.random();self.scale=rnd<.4?Math.random()*.1+.0:Math.random()*.5+1;}
this.initSpeed=function(slow){if(slow)totalEight=Math.random()*400+400;else totalEight=Math.random()*50+50;};if(!first_point)first_point=this;this.goToPoint=function(pnt,doChaos,remove,_emit){state=IN;if(doChaos!==false)doChaos=true;self.doChaos=doChaos;if(pnt==undefined||remove){chaos_pnt=module.randomPoint(remove);tween(1,0,{chaos:1,position:1,ease:module.ease.sineIn});}else{current_frames=pnt;tween(1,0,{chaos:doChaos?1:0,position:0,onComplete:function(){self.emit=_emit;},ease:module.ease.sineOut});}};this.reset=function(slow){state=IN;this.rotation=Math.random()*_2PI;var _cos=Math.cos(this.rotation);var _sin=Math.sin(this.rotation);this.transform_matrix=[_cos,-_sin,_sin,_cos];chaos_pnt=module.randomPoint(true);self.x=chaos_pnt.x;self.y=chaos_pnt.y;initRadius();self.position=1;self.chaos=1;self.alpha=1;self.eight=0;};this.destroy=function(){current_frames=null;self.chaos=1;};this.clear=function(){self.goToPoint(undefined,undefined,true);state=OUT;};this.update=function(frame,mouse){if(_tween){var now=new Date().getTime();if(now>_tween.start){if(now<_tween.end){var t=now-_tween.start,d=_tween.end-_tween.start,b=_tween.start_chaos,c=_tween.chaos-_tween.start_chaos
self.chaos=_tween.ease(t,b,c,d);b=_tween.start_position;c=_tween.position-_tween.start_position;self.position=_tween.ease(t,b,c,d);}else{var __tween=_tween;self.chaos=_tween.chaos;self.position=_tween.position;if(typeof _tween.onComplete=='function')_tween.onComplete();if(__tween==_tween)_tween=undefined;}}}else if(state==OUT){module.PointUIFactory.resolvePoint(self);return false;}
if(current_frames&&current_frames.length>0){var pnt=current_frames[frame%current_frames.length];var _alpha=!(pnt.visible===false)?1:0;var eight=module.Eight(((frame+eightOffset)%totalEight)/totalEight,this.transform_matrix);pnt=module.interpolatePoint(pnt,chaos_pnt,self.position);self.alpha=self.alpha+(_alpha-self.alpha)*alphaMagnitude;if(mouse){var rad=90;var dist=module.point2pointDistance(mouse,self);if(dist<rad){var angle=module.point2pointAngle(mouse,self);var m=0.5;mouseOffsetX=mouseOffsetX+(Math.cos(angle)*(rad-dist)-mouseOffsetX)*m;mouseOffsetY=mouseOffsetY+(Math.sin(angle)*(rad-dist)-mouseOffsetY)*m;}else if(dist<1.5*rad){}else{m=.8;mouseOffsetX*=m;mouseOffsetY*=m;}
if(!self.doChaos)self.chaos=self.chaos+(mouseOffsetX/rad*.35-self.chaos);this.speedX=(pnt.x+mouseOffsetX-self.x)*magnitude;this.speedY=(pnt.y+mouseOffsetY-self.y)*magnitude;}else{this.speedX=(pnt.x-self.x)*magnitude;this.speedY=(pnt.y-self.y)*magnitude;}
self.x=self.x+this.speedX+eight.x*eightW*(self.chaos+self.eight);self.y=self.y+this.speedY+eight.y*eightH*(self.chaos+self.eight);return true;}
return false;};function tween(_duration,_delay,params){_delay=Math.max(0,_delay);var _start=new Date().getTime();_tween={start:_start+1000*_delay,end:_start+1000*(_delay+_duration),chaos:params.chaos,start_chaos:self.chaos,position:params.position,start_position:self.position,ease:params.ease,onComplete:params.onComplete};}};var p=module.PointUI.prototype;p.draw=function(g){var clr=0xffbb03;var rgba=[clr>>16,(clr>>8)&255,clr&255,this.alpha];var r=this.r/2*(1+(this.scale-1)*this.position);g.f('rgba('+rgba.join(',')+')').dc(this.x,this.y,r).ef();};module.randomPoint=function(outter,part){if(part==undefined)part=1/3;var r=Math.random()*module.diagonal*part;if(outter===true)r+=module.diagonal;var a=Math.random()*2*Math.PI;return{x:r*Math.cos(a),y:r*Math.sin(a)};}}
function introAnimate_pointUIFactory(module){module.PointUIFactory=new function(){var _freePoints=[],_usingPoints=[];this.getPoint=function(slow){var loc1=_freePoints.length>0?_freePoints.shift():new module.PointUI();loc1.reset(slow);_usingPoints.push(loc1);return loc1;};this.resolvePoint=function(arg1){var loc1=_usingPoints.indexOf(arg1);if(loc1>=0)_usingPoints.splice(loc1,1);if(arg1.parent)arg1.parent.removeChild(arg1);arg1.destroy();if(_freePoints.indexOf(arg1)<0){_freePoints.push(arg1);}};};}
function introAnimate_tools(module){var default_transform=[1,0,0,1];function Eight(val,transform)
{val=val+0.25;if(transform==undefined)transform=default_transform;var _x=Math.cos((0.5-Math.abs(0.5-val))*2*Math.PI);var _y=Math.sin(val*4*Math.PI);return{"x":transform[0]*_x+transform[1]*_y,"y":transform[2]*_x+transform[3]*_y};}
function parsePointsData(data,info){data=data.split(/\r?\n/g);var params={xOffset:0,yOffset:0,xscale:1,yscale:1,emit:0};if(info)$.extend(params,info);var offsets=[];var tmpl=[];var offsetMult=info.randomize?1:0;var duplicates=[];for(var i=0;i<data.length;i++)
{if(/^\s*$/.test(data[i]))data.splice(i--,1);else{data[i]=data[i].split(";");for(var j=0;j<data[i].length;j++){var point=data[i][j].split(",");if(!offsets[j]){var a=Math.random()*2*Math.PI;var r=offsetMult*(Math.random()*2.3+2.2);offsets[j]={"x":r*Math.cos(a),"y":r*Math.sin(a)};}
var ___x=parseFloat(point[0]);var ___y=parseFloat(point[1]);var pnt={x:(___x+params.xOffset)*params.xscale+offsets[j].x,y:(___y+params.yOffset)*params.yscale+offsets[j].y,visible:parseInt(point[3])==1};tmpl[j]=tmpl[j]||[];tmpl[j].push({"x":pnt.x,"y":pnt.y,"visible":pnt.visible});if(info.duplicate){var dd=info.duplicate;for(var d=0;d<dd.length;d+=2){var dist=Math.abs(dd[d]-___x)+Math.abs(dd[d+1]-___y);if(dist<1){var dup_dx=2*Math.random()+2;var dup_dy=-(2*Math.random()+4);duplicates.push([{"x":pnt.x+dup_dx,"y":pnt.y+dup_dy,"visible":pnt.visible}]);}}}
tmpl[j].visible=tmpl[j].visible||pnt.visible;}}}
for(j=0;j<tmpl.length;j++){if(!tmpl[j].visible){tmpl.splice(j--,1);}}
tmpl=tmpl.concat(duplicates);tmpl.emit=params.emit;return tmpl;}
function distance(pnt,val){return point2line(pnt,[1,1,-val]);}
Math.sqrt2=Math.sqrt(2);function point2line(pnt,line){return(line[0]*pnt.x+line[1]*pnt.y+line[2])/Math.sqrt2;}
function interpolate(val1,val2,v){return val1+(val2-val1)*v;}
function interpolatePoint(pnt1,pnt2,v){return{"x":interpolate(pnt1.x,pnt2.x,v),"y":interpolate(pnt1.y,pnt2.y,v)};}
module.point2pointDistance=function(p1,p2){var _x=p1.x-p2.x;var _y=p1.y-p2.y;return Math.sqrt(_x*_x+_y*_y);};module.point2pointAngle=function(p1,p2){var _x=p2.x-p1.x;var _y=p2.y-p1.y;return Math.atan2(_y,_x);};module.ease={sineIn:function(t,b,c,d){return-c*Math.cos(t/d*(Math.PI/2))+c+b;},sineOut:function(t,b,c,d){return c*Math.sin(t/d*(Math.PI/2))+b;},sineInOut:function(t,b,c,d){return c*0.5*(1-Math.cos(t/d*Math.PI))+b;}};module.Eight=Eight;module.parsePointsData=parsePointsData;module.distance=distance;module.point2line=point2line;module.interpolate=interpolate;module.interpolatePoint=interpolatePoint;}